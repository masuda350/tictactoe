package tictactoe;import java.util.*;public class Main {    static char[][] charArray = new char[3][3];    static Scanner scanner = new Scanner(System.in);    public static void main(String[] args) {        // Fill empty board        for (char[] array: charArray) {            Arrays.fill(array, ' ');        }        String gameResult = "Game not finished";        boolean xSymbol = true;                // Loops while Game is not finished        while (gameResult.equals("Game not finished")) {            printResult();            checkCoordinates(charArray, xSymbol);            // Switches who's turn it is            xSymbol = !xSymbol;            gameResult = checkGame(charArray);        }        printResult();        System.out.println(gameResult);    }        // This method fills charArray with symbols inputted by the user    public static void enterCells() {        System.out.println("Enter cells: ");        String symbols = scanner.next();        int stringCounter = 0;        for (int i = 0; i < 3; i++) {            for (int j = 0; j < 3; j++) {                charArray[i][j] = symbols.charAt(stringCounter);                stringCounter++;            }        }    }        // Prints the board game    public static void printResult(){        System.out.println("---------");        for (int i = 0; i < 3; i++) {            System.out.print("| ");            for (int j = 0; j < 3; j++) {                System.out.print(charArray[i][j] + " ");            }            System.out.println("|");        }        System.out.println("---------");    }    static String checkGame(char[][] charArray) {        int countX = 0;        int countO = 0;        for (int i = 0; i < 3; i++) {            for (int j = 0; j < 3; j++) {                //Tracks how many X and O there are                if (charArray[i][j] == 'X') {                    countX++;                }                if (charArray[i][j] == 'O') {                    countO++;                }            }        }        //Checks to see if the difference between the number of X and O is more than 1        if (Math.abs(countX - countO) >= 2) {            return "Impossible";        }        int countRowX = 0;        int countColumnX = 0;        int countMainDiagonalX = 0;        int countSecondaryDiagonalX = 0;        int countRowO = 0;        int countColumnO = 0;        int countMainDiagonalO = 0;        int countSecondaryDiagonalO = 0;        int empty = 0;        boolean winnerX = false;        boolean winnerO = false;        for (int i = 0; i < 3; i++) {            for (int j = 0; j < 3; j++) {                //Checks if some fields are empty                if(charArray[i][j] == ' ' || charArray[i][j] == '_') {                    empty++;                }                //Counts the number of X and O                if (charArray[i][j] == 'X') {                    countRowX++;                }                if (charArray[i][j] == 'O') {                    countRowO++;                }                if (charArray[j][i] == 'X') {                    countColumnX++;                }                if (charArray[j][i] == 'O') {                    countColumnO++;                }            }            //Checks if there are 3 in a row/column of X/O            if (countRowX == 3 || countColumnX == 3) {                winnerX = true;            } else if (countRowO == 3 || countColumnO == 3) {                winnerO = true;            } else {                countRowX = 0;                countColumnX = 0;                countRowO = 0;                countColumnO = 0;            }            //Counts number of X and O going diagonally from top left to bottom right            if (charArray[i][i] == 'X') {                countMainDiagonalX++;            } else if (charArray[i][i] == 'O') {                countMainDiagonalO++;            }            if (charArray[i][charArray.length - 1 - i] == 'X') {                countSecondaryDiagonalX++;            } else if (charArray[i][charArray.length - 1 - i] == 'O') {                countSecondaryDiagonalO++;            }        }        //Checks diagonals from top left to bottom right and bottom left to top right        if (countMainDiagonalX == 3 || countSecondaryDiagonalX == 3) {            winnerX = true;        } else if (countMainDiagonalO == 3 || countSecondaryDiagonalO == 3) {            winnerO = true;        }                // Returns various results of the game        if (winnerX && winnerO) {            return "Impossible";        } else if (winnerX) {            return "X wins";        } else if (winnerO) {            return "O wins";        } else if (empty > 0) {            return "Game not finished";        } else {            return "Draw";        }    }    static void checkCoordinates(char[][] charArray, boolean xSymbol) {        while (true) {            System.out.print("Enter the coordinates: ");            try {                int x = scanner.nextInt();                int y = scanner.nextInt();                // Checks numbers entered are between 1 and 3                if (x < 1 || y < 1 || x > 3 | y > 3) {                    System.out.println("Coordinates should be from 1 to 3!");                    continue;                // Ensures cells are not occupied by symbol                } else if (charArray[charArray.length - y][x - 1] == 'X' || charArray[3 - y][x - 1] == 'O') {                    System.out.println("This cell is occupied! Choose another one!");                    continue;                }                // Checks to see who's go it is and fills with the correct symbol                if (xSymbol) {                    charArray[3 - y][x - 1] = 'X';                } else {                    charArray[3 - y][x - 1] = 'O';                }                return;            // Handles if non-integer values are inputted by user                } catch (InputMismatchException e) {                scanner.next();                System.out.println("You should enter numbers!");            }        }    }}